// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package Ahorcado;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Scanner;

import javax.swing.JFrame;

/************************************************************/
/**
 * 
 */
public class Partida {
	/**
	 * 
	 */

	public static Horca horca;
	/**
	 * 
	 */
	public static Palabra palabra;

	/**
	 * Muestra el estado de la horca y los resultados de palabra
	 */
	public static void mostrarProgreso() {
		horca.dibujar();
		palabra.mostrarResultados();
	}

	/**
	 * Solicita una letra al usuario
	 * 
	 * @return letra
	 */
	
	public static char pedirLetra() {

		Scanner entrada = new Scanner(System.in);
		System.out.print("Introduce una letra: ");

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String aux;
		int caracter;
		char letra= ' ';
		
			try {
				caracter =br.read();
				if (controladorLetra(caracter)){
					
				
				aux = Character.toString((char) caracter);
				
				letra = aux.charAt(0);	
				return letra;
				}else{
					pedirLetra();
				}
			} catch (IOException e) {
				e.printStackTrace();
			}
		
		
System.out.println("fuera letra ---> " + letra);
		return letra;
}
	

	private static boolean controladorLetra(int letra) throws IOException {

		boolean aceptada = true;
		int[] charRestringidos = { 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
				52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 93, 94, 95, 96, 123, 124, 125, 126 };
		
		for (int i = 0; i < charRestringidos.length; i++) {
			if (letra == charRestringidos[i]) {
				aceptada = false;
				return aceptada;
			}
		}
		if (letra == 13) {
			System.out.println("\n [ HASPULSADO ENTER ]\n");
			pedirLetra();
		}
		return aceptada;
	}

	/**
	 * Pide la respuesta y devuelve true si era la que buscabamos
	 * 
	 * @return palabra true si era la que busabamos o false en caso contrario
	 */
	public static boolean resolver() {

		Scanner entrada = new Scanner(System.in);
		System.out.print("Introduce una letra: ");
		return palabra.comprobarPalabra(entrada.nextLine());

	}

	/**
	 * Comprueba tanto si hemos agotado los fallos como si hemos acertado todas
	 * las letras
	 * 
	 * @return fin true si hemos ganado o perdido,false si todavia jugamos.
	 */
	public static boolean comprobarFinal() {
		return (horca.comprobarSiPerdido() || palabra.comprobarSiGanado());
	}

	public static int elegirDelMenu() {

		try {

			Scanner entrada = new Scanner(System.in);
			System.out.println("Elige una opcion");
			System.out.println("1. Letra");
			System.out.println("2. Resolver");
			System.out.println("3. Abandonar");
			return entrada.nextInt();
		} catch (Exception e) {
			System.out.println("\n [ Introduce un nÃºmero ]\n\n");

			return elegirDelMenu();
		}

	}

	public static void main(String[] args) {
		horca = new Horca();
		palabra = new Palabra();
		boolean noHaResueltoMal = true;
		palabra.elegirPalabra();

		while (!comprobarFinal() && noHaResueltoMal) {

			switch (elegirDelMenu()) {
			case 1:
				if (!palabra.comprobarLetra(pedirLetra()))
					horca.incrementarFallo();
				mostrarProgreso();
				break;

			case 2:
				if (resolver()) {
					System.out.println("Has ganado!!");
				} else {
					System.out.println("Lo siento has perdido");
					noHaResueltoMal = false;
				}
				break;
			case 4:

				break;
			case 3:
				System.exit(0);
			default:
				break;

			}

		}

	}
}
